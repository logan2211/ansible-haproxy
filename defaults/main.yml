# defaults file for haproxy
---

# This is only valid on Ubuntu. All other distros will use the version
# provided by upstream packaging.
haproxy_ppa_enabled: yes
haproxy_repo: "{{ _haproxy_repo }}"
haproxy_ppa_version: 1.9

haproxy_package_state: latest

# A list of groups that will be searched during dynamic backend discovery
haproxy_backend_search: yes
haproxy_backend_search_group: all
haproxy_backend_search_var: haproxy_backend_member

# conf.d location
haproxy_confd_path: /etc/haproxy/conf.d
haproxy_config_templates: "{{ _haproxy_config_templates }}"

haproxy_service_state: started
haproxy_service_enabled: yes

# Some haproxy features will not work well with reload and require a hard
# restart instead. By default we will use the reloaded state and users can
# change the handler to perform a hard-restart when configuration change
# occurs by setting this to "restarted"
haproxy_reload_mode: reloaded

# global section
haproxy_global_log:
  - address: /dev/log
    facility: local0
  - address: /dev/log
    facility: local1
    level: notice
haproxy_global_stats:
  sockets:
    - listen: /var/run/haproxy.stat
  timeout: 30s
haproxy_global_user: haproxy
haproxy_global_group: haproxy
haproxy_global_daemon: true
haproxy_global_ca_base: /etc/ssl/certs
haproxy_global_crt_base: /etc/ssl/private
haproxy_global_ssl_default_bind_ciphers: 'kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL'
haproxy_global_ssl_default_bind_options: 'no-sslv3'
haproxy_global_ssl_default_server_ciphers: 'kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL'
haproxy_global_ssl_default_server_options: 'no-sslv3'
haproxy_global_nbproc: 1
haproxy_global_option: []

# defaults section
haproxy_defaults_log: global
haproxy_defaults_mode: http
haproxy_defaults_option:
  - httplog
  - dontlognull
haproxy_defaults_timeout:
  - type: connect
    timeout: 5000
  - type: client
    timeout: 50000
  - type: server
    timeout: 50000
haproxy_defaults_errorfile: "{{ _haproxy_defaults_errorfile }}"

# ssl (file) map
haproxy_ssl_map: []

# listen section
haproxy_listen: []

# front-end section
haproxy_frontend: []

# back-end section
haproxy_backend: []

# user-lists section
haproxy_userlists: []

# Keys that are rendered as verbatim strings to the haproxy configuration.
# A "key" is the dictionary key on the haproxy_{frontend,backend,listen} list,
# and list_accepted is defaulted to "yes". When there is a list accepted, the
# option can be provided as either a string or a list of strings to be
# outputted multiple times to the configuration.
haproxy_raw_keys:
  - key: description
    list_accepted: no
  - key: mode
    list_accepted: no
  - key: maxconn
    list_accepted: no
  - key: balance
    list_accepted: no
  - key: source
    list_accepted: no
  - key: nolog
    config_key: 'no log'
  - key: option
  - key: no_option
    config_key: 'no option'
  - key: http_check
    config_key: 'http-check'
    list_accepted: no
  - key: cookie
    list_accepted: no
  - key: tcp_check
    config_key: 'tcp-check'
  - key: acl
  - key: reqrep
  - key: reqirep
  - key: use_backend
  - key: default_backend
    list_accepted: no
