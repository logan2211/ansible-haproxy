# tasks file for haproxy
---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- include: install.yml
  tags:
    - install

- name: Create certificate directories on target hosts
  file:
    path: "{{ item.dest | dirname }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: 0750
  with_items: "{{ haproxy_ssl_map }}"
  tags:
    - configuration
    - haproxy
    - haproxy-configuration
    - haproxy-configuration-ssl

- name: Copy SSL certificate files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0640') }}"
  with_items: "{{ haproxy_ssl_map }}"
  notify:
    - Reload HAProxy
  tags:
    - configuration
    - haproxy
    - haproxy-configuration
    - haproxy-configuration-ssl

- include: configure.yml
  tags:
    - configuration
    - haproxy
    - haproxy-configuration

- name: Set the HAProxy service state {{ haproxy_service_state }}/{{ haproxy_service_enabled }}
  service:
    name: "{{ haproxy_service_name }}"
    state: "{{ haproxy_service_state }}"
    enabled: "{{ haproxy_service_enabled }}"
  tags:
    - configuration
    - haproxy
    - haproxy-start-enable-service
